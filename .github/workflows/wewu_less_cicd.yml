name: Build & Tests
on:
  push:
    branches: [ '**' ]
    tags: [ '**' ]

jobs:
  build_and_push:
    name: Build and Push
    runs-on: ubuntu-latest
    outputs:
      image_tag: ${{ steps.image-tag.outputs.IMAGE_TAG }}
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Set Docker image tag
        id: image-tag
        env:
          DOCKERHUB_USERNAME: ${{ vars.DOCKERHUB_USERNAME }}
          REPOSITORY_NAME: ${{ github.event.repository.name }}
          COMMIT_SHA: ${{ github.sha }}
        run: echo "IMAGE_TAG=${DOCKERHUB_USERNAME}/${REPOSITORY_NAME}:${COMMIT_SHA}" >> "$GITHUB_OUTPUT"

      - name: Echo event
        env:
          ECHO_EV: ${{ github.event.ref }}
        run: echo "EVENT IS $ECHO_EV"

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.image-tag.outputs.IMAGE_TAG }}
          cache-from: type=registry,ref=wewu-less/app:latest
          cache-to: type=inline

  check_file_formatting:
    name: Check file formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          architecture: "x64"

      - name: Install pre-commit hook
        run: pip install pre-commit

      - name: Check pre-commit hook
        run: pre-commit run --all-files

  run_unit_tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: [build_and_push, check_file_formatting]
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Run unit tests
        env:
          IMAGE_NAME: ${{ needs.build_and_push.outputs.image_tag }}
        run: docker compose up wewu-less-unit-tests --exit-code-from=wewu-less-unit-tests

  deploy:
    name: Deploy Terraform
    concurrency:
      group: wewu_less_deploy_terraform
      cancel-in-progress: true
    runs-on: ubuntu-latest
    needs: [run_unit_tests]
    if: startsWith(github.event.ref, 'refs/tags/deploy')
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"
          architecture: "x64"

      - uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Set up Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3
          poetry self add poetry-plugin-export

      - name: Create deploy directory
        run: mkdir -p cloud_platform/wewu_less

      - name: Generate requirements.txt file
        run: poetry export -f requirements.txt --output cloud_platform/requirements.txt

      - name: Copy source files
        run: cp -r wewu_less/handlers cloud_platform/wewu_less

      - name: Copy whole project to cloud functions scope
        run: cp -r wewu_less cloud_platform/wewu_less/handlers

      - name: Create zip with cloud functions
        run: |
          cd cloud_platform
          zip -r wewu_less.zip wewu_less requirements.txt
          cd ..

      - name: Copy terraform files
        run: cp -rf terraform/* .

      - name: Init terraform
        run: terraform init

      - name: Apply terraform
        run: terraform apply -auto-approve -parallelism=5

  destroy:
    name: Destroy Terraform
    concurrency:
      group: wewu_less_deploy_terraform
      cancel-in-progress: true
    runs-on: ubuntu-latest
    needs: [run_unit_tests]
    if: startsWith(github.event.ref, 'refs/tags/destroy')
    env:
      GOOGLE_CREDENTIALS: ${{ secrets.GOOGLE_CREDENTIALS }}
    steps:
      - name: Checkout current repository
        uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Copy terraform files
        run: cp -rf terraform/* .

      - name: Init terraform
        run: terraform init

      - name: Apply terraform
        run: terraform apply -destroy -auto-approve -parallelism=5
